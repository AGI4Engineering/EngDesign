{'completion_tokens': 874, 'response': Response_structure(reasoning='Below is the requested SystemVerilog module named “model” implementing the parameterized combinational Gray-to-binary conversion. It uses an always_comb block and a simple for-loop to build the binary result bit by bit as specified.', code="module model #(\n    parameter WIDTH = 8\n) (\n    input  logic [WIDTH-1:0] gray,  // N-bit Gray code input\n    output logic [WIDTH-1:0] bin    // N-bit binary index output\n);\n\n    // DESCRIPTION:\n    // This combinational logic converts an N-bit Gray code to its\n    // corresponding binary index based on the following rule:\n    //   bin[WIDTH-1] = gray[WIDTH-1]\n    //   bin[i]       = bin[i+1] ^ gray[i]  for i from WIDTH-2 down to 0\n\n    always_comb begin\n        // Most-significant bit is passed through directly.\n        bin[WIDTH-1] = gray[WIDTH-1];\n\n        // Build the remaining bits of 'bin' from MSB to LSB.\n        for (int i = WIDTH-2; i >= 0; i--) begin\n            bin[i] = bin[i+1] ^ gray[i];\n        end\n    end\n\nendmodule"), 'passed': True, 'evaluation_result': {'test0_pass': True, 'test1_pass': True, 'test2_pass': True}, 'score': 100}
