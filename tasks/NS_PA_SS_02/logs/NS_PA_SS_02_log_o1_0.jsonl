{'completion_tokens': 753, 'response': Response_structure(reasoning='Below is a parameterized SystemVerilog implementation of a Gray-code counter that starts at zero and updates on each rising edge of clk. The synchronous active-low reset sets the output to zero.', code="module model #(parameter DATA_WIDTH = 4) (\n    input  logic                  clk,\n    input  logic                  resetn,\n    output logic [DATA_WIDTH-1:0] out\n);\n\n    // Internal binary counter\n    logic [DATA_WIDTH-1:0] bin_cnt;\n\n    // Synchronous logic\n    always_ff @(posedge clk) begin\n        if (!resetn) begin\n            bin_cnt <= '0; // Reset binary counter to all zeros\n        end else begin\n            bin_cnt <= bin_cnt + 1'b1; // Increment binary counter\n        end\n    end\n\n    // Convert the binary counter value to Gray code:\n    //   G = B ^ (B >> 1)\n    always_comb begin\n        out = bin_cnt ^ (bin_cnt >> 1);\n    end\n\nendmodule"), 'passed': True, 'evaluation_result': {'test0_pass': True, 'test1_pass': True, 'test2_pass': True}, 'score': 100}
