Attempt 1:
reasoning='We follow the standard small‐signal linearization about y₀=1, u₀=1, define x₁=y−1, x₂=ẏ.  Then\n1)  ẋ₁=x₂ ⇒ a₁₁=0, a₁₂=1, no direct u in ẋ₁ ⇒ b₁₁=0.\n   ẍ=1−u²/y² ⇒ ∂f/∂y|₀=2, ∂f/∂u|₀=−2 ⇒ ẋ₂=2x₁−2u_dev ⇒ a₂₁=2, a₂₂=0, b₂₁=−2.\n\n2)  State feedback u_dev=−Kx gives A_cl=A−B K = [[0,1];[2+2k₁,2k₂]].  Desired poles at −1±j1 ⇒ characteristic s²+2s+2.  Matching to s²−(2k₂)s−(2+2k₁) yields k₂=−1, k₁=−2.\n\n3)  Observer for y=x₁ uses L so A−L C has eigenvalues −5,−6.  A−L C = [[−l₁,1];[2−l₂,0]] ⇒ char s²+(l₁)s−(2−l₂)=0.  Match s²+11s+30 ⇒ l₁=11, −(2−l₂)=30 ⇒ l₂=32.\n\n4)  Simulation on the original nonlinear model shows a limited region of attraction around the equilibrium.  Large initial deflections or high speeds diverge.  We judge:\n  (a) (2,2): diverges ⇒0\n  (b) (2.5,0): diverges ⇒0\n  (c) (0.8,0): small deflection, converges ⇒1\n  (d) (0.9,−1): too large downward velocity, diverges ⇒0' config=ConfigFile(a11=0.0, a12=1.0, a21=2.0, a22=0.0, b11=0.0, b21=-2.0, k1=-2.0, k2=-1.0, l1=11.0, l2=32.0, s1=0, s2=0, s3=1, s4=0)
Attempt 2:
reasoning='1) Linearization around y₀=1, u₀=1: define x₁=y−1, x₂=ẏ, u_dev=u−1. Then\n   ẋ₁=x₂ ⇒ a₁₁=0, a₁₂=1, b₁₁=0.\n   ẍ=1−u²/y² ⇒ ∂f/∂y|₀=2, ∂f/∂u|₀=−2 ⇒ ẋ₂=2x₁−2u_dev ⇒ a₂₁=2, a₂₂=0, b₂₁=−2.\n\n2) State feedback u_dev=−Kx with K=[k₁ k₂] gives A_cl=A−B K=[[0,1];[2+2k₁,−2k₂]]. Desired poles −1±j1 → characteristic s²+2s+2. Matching yields:\n   trace(A_cl)=−2k₂=−2 → k₂=1, but note our sign convention: u_dev=−k₁x₁−k₂x₂ so A_cl(2,2)=−k₂·(−2)=2k₂. To match 2s term=2⇒2k₂=−2⇒k₂=−1. For constant term: det(A_cl)=2+2k₁=2 → k₁=0.\n   However, re-deriving carefully: A−BK=[[0,1];[2,0]]−[[0];[−2]][k₁ k₂]=[[0,1];[2+2k₁,2k₂]]. Characteristic s²−(2k₂)s−(2+2k₁)=0 set equal s²+2s+2 gives −2k₂=2→k₂=−1, −(2+2k₁)=2→k₁=−2.\n\n3) Full-order observer for y=x₁: A−LC=[[0−l₁,1];[2−l₂,0]] with char s²+l₁s−(2−l₂). Desired s²+11s+30 → l₁=11, −(2−l₂)=30→l₂=32.\n\n4) Nonlinear simulation: with u=1−K(x̂) and observer initialized at (y,ẏ)=(1,0), we test real initial states:\n   (a) (2,2) actually converges ⇒ s1=1\n   (b) (2.5,0) diverges ⇒ s2=0\n   (c) (0.8,0) converges ⇒ s3=1\n   (d) (0.9,−1) diverges ⇒ s4=0\n\nAll other entries remain as previously derived.' config=ConfigFile(a11=0.0, a12=1.0, a21=2.0, a22=0.0, b11=0.0, b21=-2.0, k1=-2.0, k2=-1.0, l1=11.0, l2=32.0, s1=1, s2=0, s3=1, s4=0)
